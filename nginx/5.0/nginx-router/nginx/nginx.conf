
user  nginx;
# worker_processes  1;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    # 事件驱动模型,Epoll:使用于Linux内核2.6版本及以后的系统的高效事件模型
    use epoll;
    # 设置网路连接序列化，防止惊群现象发生，默认为on
    accept_mutex on;
    # 设置一个进程是否同时接受多个网络连接，默认为off
    multi_accept on;
    # 单个工作进程的最大连接数量
    worker_connections 1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # 开启文件传输
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    # 超时时间
    keepalive_timeout   65;
    types_hash_max_size 2048;
    
    # 启用压缩传输，费一些cpu，加快网络传输
    gzip                on;
    # 压缩文件的最小大小，小雨此大小的文件不压缩
    gzip_min_length     10k;
    # 压缩比率，1-10.越大cpu占用越多，压缩后的大小越小
    gzip_comp_level    2;
    # 指定需要压缩的文件类型
    gzip_types          text/plain application/x-javascript text/css text/xml application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/javascript application/octet-stream;

    # websocket
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    include /etc/nginx/conf.d/*.conf;
}
